{"version":3,"sources":["screens/HomeScreen.js","data.js","screens/ProductScreen.js","App.js","serviceWorker.js","index.js"],"names":["HomeScreen","props","useState","products","setProducts","useEffect","a","axios","get","data","fetchData","className","map","product","key","_id","to","src","image","alt","name","brand","price","rating","numReviews","ProductScreen","console","log","match","params","id","find","x","description","status","App","onClick","document","querySelector","classList","add","href","remove","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2cdd5015.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction HomeScreen(props){\r\n\r\n \r\n const [products, setProducts] = useState([]);\r\n useEffect( () => {\r\n     const fetchData = async () => {\r\n         const {data} = await axios.get(\"/api/products\");\r\n         setProducts(data);\r\n     }\r\n\r\n     fetchData()\r\n     return () => {\r\n\r\n     };\r\n }, [])\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <ul className=\"products\">\r\n              {products.map(product =>\r\n                <li key={product._id}>\r\n                    <div>homescreen</div>\r\n                    <div className=\"product\">\r\n                    <Link to={'/product/' + product._id}>\r\n                    <img  className=\"product-image\" src={product.image} alt=\"product\"/> \r\n                    </Link>\r\n                       \r\n\r\n                        <div className=\"product-name\">\r\n                                <Link to={'/product/' + product._id}>{product.name}</Link>\r\n                        </div>\r\n                        <div className=\"product-brand\">{product.brand}</div>\r\n                        <div className=\"product-price\">{product.price}</div>\r\n                        <div className=\"product-rating\">{product.rating} stars (reviews)</div>\r\n                    </div>\r\n                </li>\r\n              )}\r\n           </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen;","export default {\r\n    products: [{\r\n        _id: '1',\r\n        name:'Slim Shirt',\r\n        image: '/images/d1.jpg',\r\n        price: 60,\r\n        brand: 'Nike',\r\n        rating: 4.5,\r\n        numReviews: 10\r\n    },\r\n    {\r\n        _id: '2',\r\n        name:'Slim Shirt',\r\n        image: '/images/d1.jpg',\r\n        price: 50,\r\n        brand: 'Nike',\r\n        rating: 3.5,\r\n        numReviews: 10\r\n    },\r\n    {\r\n        _id: '3',\r\n        name:'Slim Shirt',\r\n        image: '/images/d1.jpg',\r\n        price: 90,\r\n        brand: 'Adidas',\r\n        rating: 4.8,\r\n        numReviews: 10\r\n    },\r\n    {\r\n        _id: '4',\r\n        name:'Slim Shirt',\r\n        image: '/images/d1.jpg',\r\n        price: 90,\r\n        brand: 'Puma',\r\n        rating: 3.8,\r\n        numReviews: 10\r\n    }\r\n]\r\n}","import React from 'react';\r\nimport data from '../data';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction ProductScreen(props){\r\n    console.log(props.match.params.id)\r\n    const product = data.products.find(x => x._id === props.match.params.id);\r\n    return (\r\n        \r\n        <div>\r\n            <div className=\"back-to-result\"><Link to='/'>Back to result</Link></div>\r\n\r\n            <div className=\"details\">\r\n                <div className=\"details-image\">\r\n                    <img src={product.image} alt=\"product\"></img>\r\n                </div>\r\n\r\n                <div className=\"details-info\">\r\n                    <ul>\r\n                        <li>\r\n                            <h4>{product.name}</h4>\r\n                        </li>\r\n\r\n                        <li>\r\n                            {product.rating} stars  ({product.numReviews} reviews)\r\n                        </li>\r\n\r\n                        <li>\r\n                            <b> ${product.price}</b>\r\n                        </li>\r\n\r\n                        <li>\r\n                            {product.description}\r\n                        </li>\r\n\r\n\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"details-action\">\r\n                    <ul>\r\n                        <li>Price : ${product.price}</li>\r\n                        <li>status : {product.status}</li>\r\n                        <li>Qty: \r\n                            <select>\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n\r\n                            </select>\r\n                        </li>\r\n                        <li><button className='button'>Add to Cart</button></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen;","import React from 'react';\nimport './App.css';\nimport {BrowserRouter, Route, Link} from 'react-router-dom';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\n\n\n\nfunction App() {\n\n  const openMenu = () => {\n    document.querySelector('.sidebar').classList.add('open');\n  }\n\n  const closeMenu = () =>{\n    document.querySelector('.sidebar').classList.remove('open');\n  }\n\nreturn (\n  <BrowserRouter>\n<div className=\"grid-container\">\n\n    <header className=\"header\">\n        <div className=\"brand\">\n            <button onClick={openMenu}>\n                &#9776;\n            </button>\n            <Link to=\"/\">amazona</Link>\n        </div>\n\n        <div className=\"header-links\">\n            <a href=\"cart.html\">Cart</a>\n              <a href=\"signin.html\">Sign In</a>\n        </div>\n    </header>\n    \n\n    <aside className=\"sidebar\">\n        <h3>Shopping Categories</h3>\n        <button className=\"sidebar-close-button\" onClick={closeMenu}>x</button>\n        <ul>\n            <li>\n                <a href=\"index.html\">Pants</a>\n            </li>\n\n            <li>\n                <a href=\"index.html\">Shirts</a>\n            </li>\n            <li>\n                <a href=\"index.html\">Wallets</a>\n            </li>\n        </ul>\n    </aside>\n\n\n    <main className=\"main\">\n        <div className=\"content\">\n          <Route path='/product/:id' component={ProductScreen}/>\n          <Route path='/' exact={true} component={HomeScreen}/>\n            \n        </div>\n        \n    </main>\n\n    <footer className=\"footer\">\n        All rights reserved.\n    </footer>\n</div>\n</BrowserRouter>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}